"""Initial structure

Revision ID: 7f547301aecc
Revises:
Create Date: 2025-06-07 23:52:57.693377

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7f547301aecc"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "plantations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_plantations_id"),
        "plantations",
        ["id"],
        unique=False)
    op.create_table(
        "productors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("cpf_cnpj", sa.String(), nullable=False),
        sa.Column("birthdate", sa.Date(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("cpf_cnpj"),
    )
    op.create_index(
        op.f("ix_productors_id"),
        "productors",
        ["id"],
        unique=False)
    op.create_table(
        "seasons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_seasons_id"), "seasons", ["id"], unique=False)
    op.create_table(
        "farms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("city", sa.String(), nullable=False),
        sa.Column("state", sa.String(), nullable=False),
        sa.Column("total_area", sa.Float(), nullable=False),
        sa.Column("arable_area", sa.Float(), nullable=False),
        sa.Column("vegetation_area", sa.Float(), nullable=False),
        sa.Column("productor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["productor_id"],
            ["productors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_farms_id"), "farms", ["id"], unique=False)
    op.create_table(
        "farm_plantation_season",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("farm_id", sa.Integer(), nullable=False),
        sa.Column("plantation_id", sa.Integer(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["farm_id"],
            ["farms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["plantation_id"],
            ["plantations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["season_id"],
            ["seasons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_farm_plantation_season_id"),
        "farm_plantation_season",
        ["id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_farm_plantation_season_id"), table_name="farm_plantation_season"
    )
    op.drop_table("farm_plantation_season")
    op.drop_index(op.f("ix_farms_id"), table_name="farms")
    op.drop_table("farms")
    op.drop_index(op.f("ix_seasons_id"), table_name="seasons")
    op.drop_table("seasons")
    op.drop_index(op.f("ix_productors_id"), table_name="productors")
    op.drop_table("productors")
    op.drop_index(op.f("ix_plantations_id"), table_name="plantations")
    op.drop_table("plantations")
    # ### end Alembic commands ###
